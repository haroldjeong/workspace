<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	code-mapper.xml
	@author jm.lee (DEEP.FINE)
-->
<mapper namespace="go.gg.cms.core.commonCode">

	<!-- 공통코드 전체목록 조회 -->
	<select id="findCodeCache" parameterType="CommonCode" resultType="CommonCode">
		/* SQL_ID : go.gg.cms.core.commonCode.findCodeCache */
		<![CDATA[
			WITH RECURSIVE CODE_LIST (id, disp_cd, parent_id, disp_seq, custom_field_1, custom_field_2, custom_field_3, use_yn, depth, path_id, path_cd, path_name, path_seq, cycle) AS
			(
			  SELECT a.id::TEXT
			    , a.disp_cd::TEXT
			    , a.parent_id::TEXT
			    , a.disp_seq
			    , a.custom_field_1
			    , a.custom_field_2
			    , a.custom_field_3
			    , a.use_yn
			    , 1 AS depth
			    , ARRAY[a.id::TEXT]
			    , ARRAY[a.disp_cd::TEXT]
			    , ARRAY['ROOT'::TEXT]
			    , ARRAY[a.disp_seq::TEXT]
			    , false
			    , false
			    , false
			  FROM tb_code a
			  WHERE a.disp_cd = 'ROOT'
			        AND a.parent_id IS NULL
			  UNION ALL
			  SELECT a.id::TEXT
			    , a.disp_cd::TEXT
			    , a.parent_id::TEXT
			    , a.disp_seq
			    , a.custom_field_1
			    , a.custom_field_2
			    , a.custom_field_3
			    , a.use_yn
			    , b.depth + 1
			    , ARRAY_APPEND(b.path_id, a.id::TEXT)
			    , ARRAY_APPEND(b.path_cd, a.disp_cd::TEXT)
			    , ARRAY_APPEND(b.path_name, ml.name::TEXT)
			    , ARRAY_APPEND(b.path_seq, a.disp_seq::TEXT)
			    , a.id::TEXT = ANY(b.path_id)
			    , a.disp_cd::TEXT = ANY(b.path_cd)
			    , a.disp_seq::TEXT = ANY(b.path_seq)
			  FROM tb_code AS a
			    INNER JOIN tb_code_ml AS ml
			    ON a.id = ml.parent_id
			    INNER JOIN CODE_LIST AS b
			    ON a.parent_id::TEXT = b.id
			        AND a.del_yn = 'N'
		]]>
		<if test="searchUseYn != null and searchUseYn != ''">
			        AND a.use_yn = 'Y'
		</if>
		<![CDATA[
			        AND ml.lang_cd = 'ko'
			        AND NOT CYCLE
			)
			SELECT cd.id
			  , cd.disp_cd AS cd
			  , cd.parent_id
			  , ml.name
			  , ml.short_desc AS shrt_desc
			  , ml.long_desc AS long_desc
			  , cd.disp_seq AS seq
			  , cd.use_yn
			  , cd.depth
			  , cd.custom_field_1
			  , cd.custom_field_2
			  , cd.custom_field_3
			  , regexp_replace(REPLACE(cd.path_id::TEXT, ',', '.'), '[}{"]', '', 'g') AS path_id
			  , regexp_replace(REPLACE(cd.path_cd::TEXT, ',', '.'), '[}{"]', '', 'g') AS path_cd
			  , regexp_replace(REPLACE(cd.path_name::TEXT, ',', '.'), '[}{"]', '', 'g') AS path_name
			  , cd.path_seq
			  , (SELECT COUNT(id) FROM tb_code a WHERE a.del_yn = 'N' AND cd.id = a.parent_id::TEXT) AS child_cnt
			FROM CODE_LIST AS cd
			  LEFT OUTER JOIN tb_code_ml AS ml
			    ON cd.id = ml.parent_id::TEXT
			WHERE ml.lang_cd = 'ko'
			/* ORDER BY path_seq */
			ORDER BY seq
		]]>
	</select>

	<!-- 공통코드 2 Depth 목록 조회 (ROOT: 1 Depth) -->
	<select id="findFirstDepth" parameterType="CommonCode" resultType="CommonCode">
		/* SQL_ID : go.gg.cms.core.commonCode.findFirstDepth */
		<![CDATA[
			SELECT cd.id
				  , cd.disp_cd AS cd
				  , cd.parent_id
				  , ml.name
				  , ml.short_desc AS shrt_desc
				  , ml.long_desc AS long_desc
				  , cd.disp_seq AS seq
				  , cd.use_yn
				  , cd.custom_field_1
				  , cd.custom_field_2
				  , cd.custom_field_3
				  , (SELECT COUNT(id) FROM tb_code a WHERE a.del_yn = 'N' AND cd.id = a.parent_id) AS child_cnt
			  FROM tb_code AS cd
			  LEFT OUTER JOIN tb_code_ml AS ml
				ON cd.id = ml.parent_id
			 WHERE cd.parent_id = (SELECT id FROM tb_code WHERE disp_cd = 'ROOT' AND parent_id IS NULL LIMIT 1)
			 AND cd.del_yn = 'N'
			 AND ml.lang_cd = 'ko'
			 ORDER BY cd.disp_seq
		]]>
	</select>

	<!-- ROOT 코드 조회 -->
	<select id="findRooTCode" parameterType="CommonCode" resultType="CommonCode">
		/* SQL_ID : go.gg.cms.core.commonCode.findFirstDepth */
		<![CDATA[
			SELECT id
			FROM tb_code
			WHERE disp_cd = 'ROOT'
			AND parent_id IS NULL LIMIT 1
		]]>
	</select>

	<!-- 공통코드 상세정보 조회 -->
	<select id="findById" parameterType="CommonCode" resultType="CommonCode">
		/* SQL_ID : go.gg.cms.core.commonCode.findById */
		<![CDATA[
			SELECT cd.id
			  , cd.disp_cd AS cd
			  , cd.parent_id
			  , ml.name
			  , ml.short_desc AS shrt_desc
			  , ml.long_desc AS long_desc
			  , cd.disp_seq AS seq
			  , cd.use_yn
			  , cd.custom_field_1
			  , cd.custom_field_2
			  , cd.custom_field_3
			  , (SELECT COUNT(id) FROM tb_code a WHERE a.del_yn = 'N' AND cd.id = a.parent_id) AS child_cnt
			FROM tb_code AS cd
			  LEFT OUTER JOIN tb_code_ml AS ml
			    ON cd.id = ml.parent_id
			WHERE cd.id = #{id}::uuid
		    AND cd.del_yn = 'N'
		    AND ml.lang_cd = 'ko'
		]]>
	</select>

	<!-- 하위코드 추가 (마스터) -->
	<insert id="insertMaster" parameterType="CommonCode">
		/* SQL_ID : go.gg.cms.core.commonCode.insertMaster */
		<![CDATA[
			INSERT INTO tb_code (
				id
				, disp_cd
				, parent_id
				, disp_seq
				, custom_field_1
				, custom_field_2
				, custom_field_3
				, use_yn
				, del_yn
				, reg_id
				, reg_ip
				, reg_date
				, reg_agent
			) VALUES (
				#{id}::uuid
				, #{cd}
				, #{parentId}::uuid
				, #{seq, jdbcType=INTEGER}
				, #{customField1}
				, #{customField2}
				, #{customField3}
				, #{useYn}
				, 'N'
				, #{regId}::uuid
				, #{regIp}
				, now()
				, #{regAgent}
			)
		]]>
	</insert>

	<!-- 하위코드 추가 (다국어) -->
	<insert id="insertMl" parameterType="CommonCode">
		/* SQL_ID : go.gg.cms.core.commonCode.insertMl */
		<![CDATA[
			INSERT INTO tb_code_ml (
				id
				, parent_id
				, lang_cd
				, name
				, short_desc
				, long_desc
			) VALUES (
				uuid_generate_v4()
				, #{id}::uuid
				, 'ko'
				, #{name}
				, #{shrtDesc}
				, #{longDesc}
			)
		]]>
	</insert>

	<!-- 코드정보 수정 (마스터) -->
	<update id="updateMaster" parameterType="CommonCode">
		/* SQL_ID : go.gg.cms.core.commonCode.updateMaster */
		<![CDATA[
			UPDATE tb_code SET
				custom_field_1 = #{customField1}
				, custom_field_2 = #{customField2}
				, custom_field_3 = #{customField3}
				, use_yn = #{useYn}
				, mod_id = #{modId}::uuid
				, mod_ip = #{modIp}
				, mod_date = now()
				, mod_agent = #{modAgent}
			WHERE id = #{id}::uuid
		]]>
	</update>

	<!-- 코드정보 삭제 (다국어) -->
	<delete id="deleteMl" parameterType="CommonCode">
		/* SQL_ID : go.gg.cms.core.commonCode.deleteMl */
		<![CDATA[
			DELETE FROM tb_code_ml WHERE parent_id = #{id}::uuid
		]]>
	</delete>

	<!-- 코드정보 삭제 (마스터) -->
	<update id="delete" parameterType="CommonCode">
		/* SQL_ID : go.gg.cms.core.commonCode.delete */
		<![CDATA[
			UPDATE tb_code SET
				del_yn = 'Y'
				, mod_id = #{modId}::uuid
				, mod_ip = #{modIp}
				, mod_date = now()
				, mod_agent = #{modAgent}
			WHERE id = #{id}::uuid
		]]>
	</update>

	<!-- 코드 이동 및 순서변경 저장 -->
	<update id="updateSeq" parameterType="CommonCode">
		/* SQL_ID : go.gg.cms.core.commonCode.updateSeq */
		<![CDATA[

			UPDATE tb_code SET
			  parent_id = temp_tb_code.parent_id
			, disp_seq = temp_tb_code.seq
			, mod_date = now()
			, mod_id = #{modId}::uuid
			, mod_ip = #{modIp}
			, mod_agent = #{modAgent}
			FROM (
		]]>
		<foreach collection="codes" item="code" open=" ( " separator=" ) UNION ALL ( " close=" ) ">
			SELECT #{code.id}::uuid AS id, #{code.parentId}::uuid AS parent_id, #{code.seq, jdbcType=INTEGER} AS seq
		</foreach>
		<![CDATA[
			) temp_tb_code
			WHERE tb_code.id = temp_tb_code.id
		]]>
	</update>


</mapper>