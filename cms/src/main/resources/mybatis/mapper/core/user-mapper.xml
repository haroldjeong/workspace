<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	user-mapper.xml
	@author jm.lee (DEEP.FINE)
-->
<mapper namespace="go.gg.cms.apps.user">
	<!-- 공통 검색조건 -->
	<sql id="commonWhere">
		<if test="searchKeyword != null and searchKeyword != ''">
			<choose>
				<when test="searchCondition == 'name'">
					AND	u_id.name = fn_enc(#{searchKeyword})
				</when>
				<when test="searchCondition == 'id'">
					AND	u_id.login_id = #{searchKeyword}
				</when>
			</choose>
		</if>
		<if test="searchGroup != null and searchGroup != ''">
			AND	u_group.id = #{searchGroup}::uuid
		</if>
		<if test="searchStartDateStr != null and searchStartDateStr != ''">
			AND	u_id.exp_date <![CDATA[>=]]> TO_DATE(#{searchStartDateStr}, 'YYYY-MM-DD')
		</if>
		<if test="searchEndDateStr != null and searchEndDateStr != ''">
			AND	u_id.exp_date <![CDATA[<=]]> TO_DATE(#{searchEndDateStr}, 'YYYY-MM-DD')
		</if>
		<if test="searchChannel != null and searchChannel != ''">
			AND	(u_id.user_type = 'A' OR u_id.user_type = #{searchChannel})
		</if>
	</sql>

	<!-- 공통 정렬조건 -->
	<sql id="commonOrder">
		<if test="sort == null">
			ORDER BY reg_date DESC
		</if>
		<if test="sort != null">
			<foreach item="item" index="index" collection="sort" open="ORDER BY " separator=", " close=" ">
				${item.property} ${item.direction}
			</foreach>
		</if>
	</sql>

	<!-- 관리자 목록 조회 -->
	<select id="findList" parameterType="CmsUser" resultType="CmsUser">
		/* SQL_ID : go.gg.cms.apps.user.findList */
		<![CDATA[
		SELECT
			u_id.id AS id
			, u_id.login_id AS login_id
			, u_id.login_fail AS login_fail
			, u_id.user_type AS user_type
			, u_id.status AS status
			, u_id.exp_date AS exp_date
			, fn_dec(u_id.name) AS name
			, fn_dec(u_id.email) AS email
			, fn_dec(u_id.mobile) AS mobile
			, u_id.reg_id AS reg_id
			, u_id.reg_date AS reg_date
			, u_group.id AS group_id
			, u_group.group_name AS group_name
			, getFilePath(u_id.profile_file_id) AS profile_photo
		FROM
			tb_user as u_id
		LEFT OUTER JOIN tb_user_group as u_group
		ON u_id.group_id = u_group.id
		]]>
		<where>
			u_id.status <![CDATA[<>]]> 'REMOVED'
			<include refid="commonWhere"/>
		</where>
		<include refid="commonOrder"/>
		OFFSET (#{pageIndex} - 1) * #{pageUnit} LIMIT #{pageUnit}
	</select>

	<!-- 관리자 목록 건수 조회 -->
	<select id="countList" parameterType="CmsUser" resultType="int">
		/* SQL_ID : go.gg.cms.apps.user.countList */
		<![CDATA[
		SELECT
			COUNT(u_id.id) AS cnt
		FROM
			tb_user as u_id
		LEFT OUTER JOIN tb_user_group as u_group
		ON u_id.group_id = u_group.id
		]]>
		<where>
			u_id.status <![CDATA[<>]]> 'REMOVED'
			<include refid="commonWhere"/>
		</where>
	</select>

	<!-- 관리자 상세 조회 -->
	<select id="findByDetail" parameterType="CmsUser" resultType="CmsUser">
		/* SQL_ID : go.gg.cms.apps.user.findByDetail */
		<![CDATA[
		SELECT
			u_id.id AS id
			, u_id.login_id AS login_id
			, u_id.login_fail AS login_fail
			, u_id.user_type AS user_type
			, u_id.status AS status
			, u_id.exp_date AS exp_date
			, fn_dec(u_id.name) AS name
			, fn_dec(u_id.email) AS email
			, fn_dec(u_id.mobile) AS mobile
			, u_id.reg_id AS reg_id
			, u_id.reg_date AS reg_date
			, u_group.id AS group_id
			, u_group.group_name AS group_name
			, getFilePath(u_id.profile_file_id) AS profile_photo
		FROM
			tb_user as u_id
		LEFT OUTER JOIN tb_user_group as u_group
		ON u_id.group_id = u_group.id
		]]>
		<where>
			u_id.status <![CDATA[<>]]> 'REMOVED'
			AND u_id.id = #{id}::uuid
		</where>
		LIMIT 1
	</select>

	<!-- 관리자 그룹 목록 조회 -->
	<select id="findGroupList" parameterType="CmsUser" resultType="CmsUser">
		/* SQL_ID : go.gg.cms.apps.user.findGroupList */
		<![CDATA[
		SELECT
			u_group.id AS group_id
			, u_group.group_name AS group_name
		FROM
			tb_user_group as u_group
		WHERE
			u_group.del_yn = 'N'
			AND u_group.use_yn = 'Y'
		ORDER BY u_group.disp_seq ASC
		]]>
	</select>

	<!-- 관리자 정보 수정 -->
	<update id="updateUser" parameterType="CmsUser">
		/* SQL_ID : go.gg.cms.apps.user.updateUser */
		<![CDATA[
		UPDATE tb_user SET
			name = fn_enc(#{name})
			, email = fn_enc(#{email})
			, mobile = fn_enc(#{mobile})
			, group_id = #{groupId}::uuid
			, user_type = #{userType}
			, exp_date = #{expDate}
		WHERE id = #{id}::uuid
		]]>
	</update>

	<!-- 관리자 정보 삭제 -->
	<update id="deleteUser" parameterType="CmsUser">
		/* SQL_ID : go.gg.cms.apps.user.deleteUser */
		<![CDATA[
		UPDATE tb_user SET
			status = 'REMOVED'
		WHERE id = #{id}::uuid
		]]>
	</update>
</mapper>