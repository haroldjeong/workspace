<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	role-mapper.xml
	@author jh.park (DEEP.FINE)

	// Guide
	[jdbcType]
		BIT
		FLOAT
		CHAR
		TIMESTAMP
		OTHER
		UNDEFINED
		TINYINT
		REAL
		VARCHAR
		BINARY
		BLOB
		NVARCHAR
		SMALLINT
		DOUBLE
		LONGVARCHAR
		VARBINARY
		CLOB
		NCHAR
		INTEGER
		NUMERIC
		DATE
		LONGVARBINARY
		BOOLEAN
		NCLOB
		BIGINT
		DECIMAL
		TIME
		NULL
		CURSOR
-->
<mapper namespace="go.gg.cms.core.role">
	<!-- 공통 검색조건 -->
	<sql id="commonWhere">
		<if test="searchKeyword != null and searchKeyword != ''">
			<choose>
				<when test="searchCondition == 'name'">
					AND	name like '%' || #{searchKeyword} || '%'
				</when>
			</choose>
		</if>
	</sql>

	<!-- 공통 정렬조건 -->
	<sql id="commonOrder">
		<if test="sort == null">
			ORDER BY reg_date DESC
		</if>
		<if test="sort != null">
			<foreach item="item" index="index" collection="sort" open="ORDER BY " separator=", " close=" ">
				${item.property} ${item.direction}
			</foreach>
		</if>
	</sql>

	<!-- 목록 조회 -->
	<select id="findList" parameterType="Role" resultType="Role">
		/* SQL_ID : go.gg.cms.core.role.findList */
		<![CDATA[
			SELECT
				id AS id
				, role_cd AS role_cd
				, name AS name
				, use_yn AS use_yn
				, reg_id AS reg_id
				, reg_ip AS reg_ip
				, reg_date AS reg_date
				, reg_agent AS reg_agent
				, mod_id AS mod_id
				, mod_ip AS mod_ip
				, mod_date AS mod_date
				, mod_agent AS mod_agent
				, role_desc AS role_desc
			FROM tb_role
			WHERE
				del_yn = 'N'
		]]>
		<include refid="commonWhere"/>
		<include refid="commonOrder"/>
		OFFSET (#{pageIndex} - 1) * #{pageUnit} LIMIT #{pageUnit}
	</select>

	<!-- 목록 건수 조회 -->
	<select id="countList" parameterType="Role" resultType="int">
		/* SQL_ID : go.gg.cms.core.role.countList */
		<![CDATA[
			SELECT COUNT(id) AS cnt
			FROM tb_role
			WHERE
				del_yn = 'N'
		]]>
		<include refid="commonWhere"/>
	</select>

	<!-- 상세 조회 -->
	<select id="findDetail" parameterType="Role" resultType="Role">
		/* SQL_ID : go.gg.cms.core.role.findDetail */
		<![CDATA[
			SELECT
				id AS id
				, role_cd AS role_cd
				, name AS name
				, use_yn AS use_yn
				, reg_id AS reg_id
				, reg_ip AS reg_ip
				, reg_date AS reg_date
				, reg_agent AS reg_agent
				, mod_id AS mod_id
				, mod_ip AS mod_ip
				, mod_date AS mod_date
				, mod_agent AS mod_agent
				, role_desc AS role_desc
			FROM tb_role
			WHERE
				id = #{id}::uuid
				AND del_yn = 'N'
		]]>
	</select>

	<!-- 정보 입력 (마스터) -->
	<insert id="insert" parameterType="Role">
		/* SQL_ID : go.gg.cms.core.role.insert */
		<![CDATA[
		INSERT INTO tb_role (
			id
			, role_cd
			, name
			, use_yn
			, reg_id
			, reg_ip
			, reg_date
			, reg_agent
			, role_desc
			, del_yn
		) VALUES (
			#{id}::uuid
			, #{roleCd}
			, #{name}
			, #{useYn}
			, '5ecf786a-954d-4868-b9f1-250e1747c9bb'::uuid
			, '127.0.0.1'
			, now()
			, 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36'
			, #{roleDesc}
			, 'N'
		)
		]]>
	</insert>

	<!-- 정보 수정 (마스터) -->
	<update id="update" parameterType="Role">
		/* SQL_ID : go.gg.cms.core.role.update */
		<![CDATA[
		UPDATE tb_role SET
			  role_cd = #{roleCd}
			, name = #{name}
			, use_yn = #{useYn}
			, mod_id = '5ecf786a-954d-4868-b9f1-250e1747c9bb'::uuid
			, mod_ip = '127.0.0.1'
			, mod_date = now()
			, mod_agent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36'
			, role_desc = #{roleDesc}
		WHERE
			id = #{id}::uuid
		]]>
	</update>

	<!-- 정보 삭제 -->
	<update id="delete" parameterType="Role">
		/* SQL_ID : go.gg.cms.core.role.delete */
		<![CDATA[
		UPDATE tb_role SET
			del_yn = 'Y'
			, mod_id = '5ecf786a-954d-4868-b9f1-250e1747c9bb'::uuid
			, mod_ip = '127.0.0.1'
			, mod_date = now()
			, mod_agent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36'
		WHERE
			id = #{id}::uuid
		]]>
	</update>

</mapper>
